plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id "org.sonarqube" version "3.4.0.2513"
	id 'java'
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://sonarqube-speaker01.apps.penguin.rhtw.kubedev.org'
        property "sonar.login", "admin"
        property "sonar.password", "redhat"
        property 'sonar.java.source', 11
        property 'encoding', 'UTF-8'
        property 'charSet', 'UTF-8'
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.2.32'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
